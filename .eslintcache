[{"/Users/muje/Desktop/project/workspace/calender/src/reportWebVitals.js":"1","/Users/muje/Desktop/project/workspace/calender/src/calender/TimeTable.js":"2","/Users/muje/Desktop/project/workspace/calender/src/calender/Calendar.js":"3","/Users/muje/Desktop/project/workspace/calender/src/App.js":"4","/Users/muje/Desktop/project/workspace/calender/src/index.js":"5"},{"size":362,"mtime":1608602470426,"results":"6","hashOfConfig":"7"},{"size":3570,"mtime":1609984845295,"results":"8","hashOfConfig":"7"},{"size":19332,"mtime":1609985819355,"results":"9","hashOfConfig":"7"},{"size":169,"mtime":1608602470425,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1608602470426,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7xjfu3",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/muje/Desktop/project/workspace/calender/src/reportWebVitals.js",[],"/Users/muje/Desktop/project/workspace/calender/src/calender/TimeTable.js",["24","25","26","27","28"],"import React, { useState, useCallback, useEffect} from 'react'\nimport './timeTable.scss'\n\nconst ARR = [\"9:00\", \"10:00\", \"11:00\", \"12:00\", \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\"];\n\n\nconst TimeTable = ({getChoiceTimeList, selectDate, setSelectDate, ARR, ABLE_LIST}) => {\n  const AM = ARR.slice(0, 4)\n  const PM = ARR.slice(4, 12)\n\n  const [selectTime, setSelectTime] = useState([]);\n  const [listData, setListData] = useState({\n    am: [],\n    pm: []\n  })\n  console.log(selectTime, 'asdfasdfas')\n  useEffect(() => {\n    if(ABLE_LIST) {\n      const TEST_AM = ABLE_LIST.slice(0, 4)\n      const TEST_PM = ABLE_LIST.slice(4, 12)\n      setListData({\n        am: TEST_AM,\n        pm: TEST_PM\n      })\n    }\n  },[ABLE_LIST])\n\n  useEffect(() => {\n    setSelectTime([])\n  },[listData])\n\n  useEffect(() => {\n    getChoiceTimeList(selectTime)\n  },[selectTime])\n\n  const selectReserveTime = useCallback((time) => {\n      if (selectTime.length >= 3) {\n        // Alert.alert(\"이용시간 제한\", \"최대 3시간만 이용가능 합니다.\");\n        // alert('최대 3시간만 이용가능 합니다.')\n        const removeArr = selectTime.filter((el) => el !== time);\n        setSelectTime(removeArr);\n        setSelectDate({\n          ...selectDate,\n          time: removeArr\n        })\n      } else if (selectTime.includes(time)) {\n        const removeArr = selectTime.filter((el) => el !== time);\n        setSelectTime(removeArr);\n        setSelectDate({\n          ...selectDate,\n          time: removeArr\n        })\n      } else {\n\n        setSelectTime([...selectTime, time]);\n        setSelectDate({\n          ...selectDate,\n          time: [...selectTime, time]\n        })\n      }\n    }, [selectTime, selectDate])\n\n\n  const disableButton = (arr, index) => {\n    if(arr[index] === '0') {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const getAmButton = useCallback(() => {\n    return AM.map((el, index) => {\n      // const disabled = TEST_AM.includes(el)\n      const disabled = disableButton(listData.am, index)\n      // alert(disableButton(TEST_AM, index))\n      const disabledStyle = disabled ? 'disabledStyle' : ''\n      const active = selectTime.includes(index) ? 'active' : ''\n      return (\n        <button onClick={()=> selectReserveTime(index)} disabled={disabled} className={`activeButton ${disabledStyle} ${active}`}>\n          {el}\n        </button>\n      )\n    })\n  },[selectTime, selectDate, listData, ABLE_LIST])\n\n  const getPmButton = useCallback(() => {\n    return PM.map((el, index) => {\n      const disabled = disableButton(listData.pm, index)\n      const disabledStyle = disabled ? 'disabledStyle' : ''\n      const active = selectTime.includes(index + 4) ? 'active' : ''\n      return (\n        <button onClick={()=> selectReserveTime(index + 4)} disabled={disabled} className={`activeButton ${disabledStyle} ${active}`}>\n          {el}\n        </button>\n      )\n    })\n  },[selectTime, selectDate, listData, ABLE_LIST])\n\n\n  return (\n    <div className='mainContainer'>\n      <span className='mainContainerTitle'>시간 선택</span>\n      <span className='mainContainerSubTitle'>최대 3시간 이용가능</span>\n\n      <div className='timeContainer'>\n        <p className='timeTitle'>오전</p>\n        <div className='buttonBox'>\n          {getAmButton()}\n        </div>\n      </div>\n\n      <div className='timeContainer pmContainer'>\n        <p className='timeTitle'>오후</p>\n        <div className='buttonBox'>\n          {getPmButton()}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TimeTable","/Users/muje/Desktop/project/workspace/calender/src/calender/Calendar.js",["29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44"],"/Users/muje/Desktop/project/workspace/calender/src/App.js",["45"],"import logo from './logo.svg';\nimport './App.css';\nimport Calendar from \"./calender/Calendar\";\n\nfunction App() {\n  return (\n    <Calendar />\n  );\n}\n\nexport default App;\n","/Users/muje/Desktop/project/workspace/calender/src/index.js",[],{"ruleId":"46","severity":1,"message":"47","line":4,"column":7,"nodeType":"48","messageId":"49","endLine":4,"endColumn":10},{"ruleId":"50","severity":1,"message":"51","line":34,"column":5,"nodeType":"52","endLine":34,"endColumn":17,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":61,"column":8,"nodeType":"52","endLine":61,"endColumn":32,"suggestions":"55"},{"ruleId":"50","severity":1,"message":"56","line":85,"column":5,"nodeType":"52","endLine":85,"endColumn":50,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"58","line":98,"column":5,"nodeType":"52","endLine":98,"endColumn":50,"suggestions":"59"},{"ruleId":"50","severity":1,"message":"60","line":104,"column":5,"nodeType":"52","endLine":104,"endColumn":53,"suggestions":"61"},{"ruleId":"50","severity":1,"message":"62","line":183,"column":5,"nodeType":"52","endLine":183,"endColumn":69,"suggestions":"63"},{"ruleId":"50","severity":1,"message":"64","line":203,"column":5,"nodeType":"52","endLine":203,"endColumn":34,"suggestions":"65"},{"ruleId":"50","severity":1,"message":"66","line":234,"column":5,"nodeType":"52","endLine":234,"endColumn":29,"suggestions":"67"},{"ruleId":"50","severity":1,"message":"68","line":262,"column":5,"nodeType":"52","endLine":262,"endColumn":28,"suggestions":"69"},{"ruleId":"50","severity":1,"message":"70","line":273,"column":5,"nodeType":"52","endLine":273,"endColumn":29,"suggestions":"71"},{"ruleId":"50","severity":1,"message":"72","line":322,"column":5,"nodeType":"52","endLine":322,"endColumn":29,"suggestions":"73"},{"ruleId":"46","severity":1,"message":"74","line":327,"column":33,"nodeType":"48","messageId":"49","endLine":327,"endColumn":37},{"ruleId":"50","severity":1,"message":"75","line":421,"column":5,"nodeType":"52","endLine":421,"endColumn":17,"suggestions":"76"},{"ruleId":"50","severity":1,"message":"77","line":441,"column":5,"nodeType":"52","endLine":441,"endColumn":36,"suggestions":"78"},{"ruleId":"50","severity":1,"message":"79","line":445,"column":5,"nodeType":"52","endLine":445,"endColumn":10,"suggestions":"80"},{"ruleId":"50","severity":1,"message":"81","line":449,"column":5,"nodeType":"52","endLine":449,"endColumn":19,"suggestions":"82"},{"ruleId":"50","severity":1,"message":"83","line":453,"column":5,"nodeType":"52","endLine":453,"endColumn":30,"suggestions":"84"},{"ruleId":"50","severity":1,"message":"85","line":479,"column":5,"nodeType":"52","endLine":479,"endColumn":31,"suggestions":"86"},{"ruleId":"50","severity":1,"message":"87","line":496,"column":5,"nodeType":"52","endLine":496,"endColumn":31,"suggestions":"88"},{"ruleId":"50","severity":1,"message":"89","line":526,"column":5,"nodeType":"52","endLine":526,"endColumn":52,"suggestions":"90"},{"ruleId":"46","severity":1,"message":"91","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},"no-unused-vars","'ARR' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getChoiceTimeList'. Either include it or remove the dependency array. If 'getChoiceTimeList' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["92"],"React Hook useCallback has a missing dependency: 'setSelectDate'. Either include it or remove the dependency array. If 'setSelectDate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["93"],"React Hook useCallback has missing dependencies: 'AM' and 'selectReserveTime'. Either include them or remove the dependency array.",["94"],"React Hook useCallback has missing dependencies: 'PM' and 'selectReserveTime'. Either include them or remove the dependency array.",["95"],"React Hook useCallback has unnecessary dependencies: 'monthDate', 'monthDay', and 'monthLength'. Either exclude them or remove the dependency array.",["96"],"React Hook useCallback has missing dependencies: 'nextSelectAbleDate' and 'prevSelectAbleDate'. Either include them or remove the dependency array.",["97"],"React Hook useCallback has unnecessary dependencies: 'dashStandard' and 'standard'. Either exclude them or remove the dependency array.",["98"],"React Hook useCallback has unnecessary dependencies: 'middleDate' and 'selectDate'. Either exclude them or remove the dependency array.",["99"],"React Hook useCallback has a missing dependency: 'isFalseArr'. Either include it or remove the dependency array.",["100"],"React Hook useCallback has missing dependencies: 'findFalse', 'getMiddleDate', and 'getSelectDate'. Either include them or remove the dependency array.",["101"],"React Hook useCallback has a missing dependency: 'getTimeList'. Either include it or remove the dependency array.",["102"],"'date' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'selectDate'. Either exclude it or remove the dependency array.",["103"],"React Hook useCallback has unnecessary dependencies: 'ARR' and 'localStorage'. Either exclude them or remove the dependency array. Outer scope values like 'localStorage' aren't valid dependencies because mutating them doesn't re-render the component.",["104"],"React Hook useEffect has a missing dependency: 'getStandardDate'. Either include it or remove the dependency array.",["105"],"React Hook useEffect has a missing dependency: 'calculationDate'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has a missing dependency: 'getRenderDate'. Either include it or remove the dependency array.",["107"],"React Hook useEffect has an unnecessary dependency: 'localStorage'. Either exclude it or remove the dependency array. Outer scope values like 'localStorage' aren't valid dependencies because mutating them doesn't re-render the component.",["108"],"React Hook useEffect has a missing dependency: 'getInitDate'. Either include it or remove the dependency array. Outer scope values like 'localStorage' aren't valid dependencies because mutating them doesn't re-render the component.",["109"],"React Hook useCallback has missing dependencies: 'findFalse' and 'getDate'. Either include them or remove the dependency array.",["110"],"'logo' is defined but never used.",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"125","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [getChoiceTimeList, selectTime]",{"range":"148","text":"149"},"Update the dependencies array to be: [selectTime, setSelectDate, selectDate]",{"range":"150","text":"151"},"Update the dependencies array to be: [AM, listData.am, selectTime, selectReserveTime]",{"range":"152","text":"153"},"Update the dependencies array to be: [PM, listData.pm, selectTime, selectReserveTime]",{"range":"154","text":"155"},"Update the dependencies array to be: [dashStandard]",{"range":"156","text":"157"},"Update the dependencies array to be: [monthDate, monthDay, selectAbleDate, prevSelectAbleDate, ableDateList.prev, ableDateList.next, monthLength.prevMonth, monthLength.nextMonth, nextSelectAbleDate]",{"range":"158","text":"159"},"Update the dependencies array to be: [num]",{"range":"160","text":"161"},"Update the dependencies array to be: []",{"range":"162","text":"163"},"Update the dependencies array to be: [isFalseArr]",{"range":"164","text":"165"},"Update the dependencies array to be: [getMiddleDate, selectDate.startDate, findFalse, getSelectDate]",{"range":"166","text":"167"},"Update the dependencies array to be: [selectDate, getTimeList]",{"range":"168","text":"169"},{"range":"170","text":"163"},"Update the dependencies array to be: [threeMonth]",{"range":"171","text":"172"},"Update the dependencies array to be: [getStandardDate, num]",{"range":"173","text":"174"},"Update the dependencies array to be: [calculationDate, dashStandard]",{"range":"175","text":"176"},"Update the dependencies array to be: [monthDate, ableDateList, getRenderDate]",{"range":"177","text":"178"},"Update the dependencies array to be: [selectDate]",{"range":"179","text":"180"},"Update the dependencies array to be: [threeMonth, getInitDate]",{"range":"181","text":"182"},"Update the dependencies array to be: [findFalse, middleDate, dateArr, selectDate.startDate, selectDate.endDate, getDate]",{"range":"183","text":"184"},[858,870],"[getChoiceTimeList, selectTime]",[1648,1672],"[selectTime, setSelectDate, selectDate]",[2357,2402],"[AM, listData.am, selectTime, selectReserveTime]",[2869,2914],"[PM, listData.pm, selectTime, selectReserveTime]",[3291,3339],"[dashStandard]",[5557,5621],"[monthDate, monthDay, selectAbleDate, prevSelectAbleDate, ableDateList.prev, ableDateList.next, monthLength.prevMonth, monthLength.nextMonth, nextSelectAbleDate]",[6276,6305],"[num]",[7140,7164],"[]",[7786,7809],"[isFalseArr]",[8124,8148],"[getMiddleDate, selectDate.startDate, findFalse, getSelectDate]",[9368,9392],"[selectDate, getTimeList]",[13576,13588],[14237,14268],"[threeMonth]",[14321,14326],"[getStandardDate, num]",[14379,14393],"[calculationDate, dashStandard]",[14444,14469],"[monthDate, ableDateList, getRenderDate]",[15113,15139],"[selectDate]",[15625,15651],"[threeMonth, getInitDate]",[16811,16858],"[findFalse, middleDate, dateArr, selectDate.startDate, selectDate.endDate, getDate]"]