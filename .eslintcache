[{"/Users/muje/Desktop/project/workspace/calender/src/reportWebVitals.js":"1","/Users/muje/Desktop/project/workspace/calender/src/calender/TimeTable.js":"2","/Users/muje/Desktop/project/workspace/calender/src/calender/Calendar.js":"3","/Users/muje/Desktop/project/workspace/calender/src/App.js":"4","/Users/muje/Desktop/project/workspace/calender/src/index.js":"5"},{"size":362,"mtime":1608602470426,"results":"6","hashOfConfig":"7"},{"size":3185,"mtime":1609305983285,"results":"8","hashOfConfig":"7"},{"size":17306,"mtime":1609322231247,"results":"9","hashOfConfig":"7"},{"size":169,"mtime":1608602470425,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1608602470426,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7xjfu3",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/muje/Desktop/project/workspace/calender/src/reportWebVitals.js",[],"/Users/muje/Desktop/project/workspace/calender/src/calender/TimeTable.js",["23","24","25","26","27"],"import React, { useState, useCallback, useEffect} from 'react'\nimport './timeTable.scss'\n\nconst ARR = [\"9:00\", \"10:00\", \"11:00\", \"12:00\", \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\"];\n\n\nconst TimeTable = ({selectDate, setSelectDate, ARR}) => {\n  const AM = ARR.slice(0, 4)\n  const PM = ARR.slice(4, 12)\n\n  const TEST_ARR = [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,];\n  const TEST_AM = TEST_ARR.slice(0, 4)\n  const TEST_PM = TEST_ARR.slice(4, 12)\n\n\n  const [selectTime, setSelectTime] = useState([]);\n\n  const selectReserveTime = useCallback((time) => {\n      if (selectTime.length >= 3) {\n        // Alert.alert(\"이용시간 제한\", \"최대 3시간만 이용가능 합니다.\");\n        // alert('최대 3시간만 이용가능 합니다.')\n        const removeArr = selectTime.filter((el) => el !== time);\n        setSelectTime(removeArr);\n        setSelectDate({\n          ...selectDate,\n          time: removeArr\n        })\n      } else if (selectTime.includes(time)) {\n        const removeArr = selectTime.filter((el) => el !== time);\n        setSelectTime(removeArr);\n        setSelectDate({\n          ...selectDate,\n          time: removeArr\n        })\n      } else {\n        setSelectTime([...selectTime, time]);\n        setSelectDate({\n          ...selectDate,\n          time: [...selectTime, time]\n        })\n      }\n    }, [selectTime, selectDate])\n\n  console.log(selectTime)\n\n  const disableButton = (arr, index) => {\n    if(arr[index] === 0) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const getAmButton = useCallback(() => {\n    return AM.map((el, index) => {\n      // const disabled = TEST_AM.includes(el)\n      const disabled = disableButton(TEST_AM, index)\n      // alert(disableButton(TEST_AM, index))\n      const disabledStyle = disabled ? 'disabledStyle' : ''\n      const active = selectTime.includes(index) ? 'active' : ''\n      return (\n        <button onClick={()=> selectReserveTime(index)} disabled={disabled} className={`activeButton ${disabledStyle} ${active}`}>\n          {el}\n        </button>\n      )\n    })\n  },[selectTime, selectDate])\n\n  const getPmButton = useCallback(() => {\n    return PM.map((el, index) => {\n      const disabled = disableButton(TEST_PM, index)\n      const disabledStyle = disabled ? 'disabledStyle' : ''\n      const active = selectTime.includes(index + 4) ? 'active' : ''\n      return (\n        <button onClick={()=> selectReserveTime(index + 4)} disabled={disabled} className={`activeButton ${disabledStyle} ${active}`}>\n          {el}\n        </button>\n      )\n    })\n  },[selectTime, selectDate])\n\n\n  return (\n    <div className='mainContainer'>\n      <span className='mainContainerTitle'>시간 선택</span>\n      <span className='mainContainerSubTitle'>최대 3시간 이용가능</span>\n\n      <div className='timeContainer'>\n        <p className='timeTitle'>오전</p>\n        <div className='buttonBox'>\n          {getAmButton()}\n        </div>\n      </div>\n\n      <div className='timeContainer pmContainer'>\n        <p className='timeTitle'>오후</p>\n        <div className='buttonBox'>\n          {getPmButton()}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TimeTable","/Users/muje/Desktop/project/workspace/calender/src/calender/Calendar.js",["28","29","30","31","32","33","34","35","36","37","38","39","40","41","42"],"/Users/muje/Desktop/project/workspace/calender/src/App.js",["43"],"/Users/muje/Desktop/project/workspace/calender/src/index.js",[],{"ruleId":"44","severity":1,"message":"45","line":1,"column":40,"nodeType":"46","messageId":"47","endLine":1,"endColumn":49},{"ruleId":"44","severity":1,"message":"48","line":4,"column":7,"nodeType":"46","messageId":"47","endLine":4,"endColumn":10},{"ruleId":"49","severity":1,"message":"50","line":42,"column":8,"nodeType":"51","endLine":42,"endColumn":32,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":67,"column":5,"nodeType":"51","endLine":67,"endColumn":29,"suggestions":"54"},{"ruleId":"49","severity":1,"message":"55","line":80,"column":5,"nodeType":"51","endLine":80,"endColumn":29,"suggestions":"56"},{"ruleId":"49","severity":1,"message":"57","line":100,"column":5,"nodeType":"51","endLine":100,"endColumn":53,"suggestions":"58"},{"ruleId":"49","severity":1,"message":"59","line":179,"column":5,"nodeType":"51","endLine":179,"endColumn":69,"suggestions":"60"},{"ruleId":"49","severity":1,"message":"61","line":199,"column":5,"nodeType":"51","endLine":199,"endColumn":34,"suggestions":"62"},{"ruleId":"49","severity":1,"message":"63","line":230,"column":5,"nodeType":"51","endLine":230,"endColumn":29,"suggestions":"64"},{"ruleId":"49","severity":1,"message":"65","line":258,"column":5,"nodeType":"51","endLine":258,"endColumn":28,"suggestions":"66"},{"ruleId":"49","severity":1,"message":"67","line":269,"column":5,"nodeType":"51","endLine":269,"endColumn":29,"suggestions":"68"},{"ruleId":"49","severity":1,"message":"69","line":317,"column":5,"nodeType":"51","endLine":317,"endColumn":29,"suggestions":"70"},{"ruleId":"44","severity":1,"message":"71","line":322,"column":33,"nodeType":"46","messageId":"47","endLine":322,"endColumn":37},{"ruleId":"49","severity":1,"message":"72","line":418,"column":5,"nodeType":"51","endLine":418,"endColumn":36,"suggestions":"73"},{"ruleId":"49","severity":1,"message":"74","line":422,"column":5,"nodeType":"51","endLine":422,"endColumn":10,"suggestions":"75"},{"ruleId":"49","severity":1,"message":"76","line":426,"column":5,"nodeType":"51","endLine":426,"endColumn":19,"suggestions":"77"},{"ruleId":"49","severity":1,"message":"78","line":430,"column":5,"nodeType":"51","endLine":430,"endColumn":30,"suggestions":"79"},{"ruleId":"49","severity":1,"message":"80","line":456,"column":5,"nodeType":"51","endLine":456,"endColumn":31,"suggestions":"81"},{"ruleId":"49","severity":1,"message":"82","line":463,"column":5,"nodeType":"51","endLine":463,"endColumn":31,"suggestions":"83"},{"ruleId":"49","severity":1,"message":"84","line":493,"column":5,"nodeType":"51","endLine":493,"endColumn":52,"suggestions":"85"},{"ruleId":"44","severity":1,"message":"86","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ARR' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setSelectDate'. Either include it or remove the dependency array. If 'setSelectDate' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["87"],"React Hook useCallback has missing dependencies: 'AM', 'TEST_AM', and 'selectReserveTime'. Either include them or remove the dependency array.",["88"],"React Hook useCallback has missing dependencies: 'PM', 'TEST_PM', and 'selectReserveTime'. Either include them or remove the dependency array.",["89"],"React Hook useCallback has unnecessary dependencies: 'monthDate', 'monthDay', and 'monthLength'. Either exclude them or remove the dependency array.",["90"],"React Hook useCallback has missing dependencies: 'nextSelectAbleDate' and 'prevSelectAbleDate'. Either include them or remove the dependency array.",["91"],"React Hook useCallback has unnecessary dependencies: 'dashStandard' and 'standard'. Either exclude them or remove the dependency array.",["92"],"React Hook useCallback has unnecessary dependencies: 'middleDate' and 'selectDate'. Either exclude them or remove the dependency array.",["93"],"React Hook useCallback has a missing dependency: 'isFalseArr'. Either include it or remove the dependency array.",["94"],"React Hook useCallback has missing dependencies: 'findFalse', 'getMiddleDate', and 'getSelectDate'. Either include them or remove the dependency array.",["95"],"React Hook useCallback has an unnecessary dependency: 'middleDate'. Either exclude it or remove the dependency array.",["96"],"'date' is assigned a value but never used.","React Hook useCallback has unnecessary dependencies: 'ARR' and 'localStorage'. Either exclude them or remove the dependency array. Outer scope values like 'localStorage' aren't valid dependencies because mutating them doesn't re-render the component.",["97"],"React Hook useEffect has a missing dependency: 'getStandardDate'. Either include it or remove the dependency array.",["98"],"React Hook useEffect has a missing dependency: 'calculationDate'. Either include it or remove the dependency array.",["99"],"React Hook useEffect has a missing dependency: 'getRenderDate'. Either include it or remove the dependency array.",["100"],"React Hook useEffect has an unnecessary dependency: 'localStorage'. Either exclude it or remove the dependency array. Outer scope values like 'localStorage' aren't valid dependencies because mutating them doesn't re-render the component.",["101"],"React Hook useEffect has a missing dependency: 'getInitDate'. Either include it or remove the dependency array. Outer scope values like 'localStorage' aren't valid dependencies because mutating them doesn't re-render the component.",["102"],"React Hook useCallback has missing dependencies: 'findFalse' and 'getDate'. Either include them or remove the dependency array.",["103"],"'logo' is defined but never used.",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"122","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [selectTime, setSelectDate, selectDate]",{"range":"137","text":"138"},"Update the dependencies array to be: [AM, TEST_AM, selectTime, selectReserveTime]",{"range":"139","text":"140"},"Update the dependencies array to be: [PM, TEST_PM, selectTime, selectReserveTime]",{"range":"141","text":"142"},"Update the dependencies array to be: [dashStandard]",{"range":"143","text":"144"},"Update the dependencies array to be: [monthDate, monthDay, selectAbleDate, prevSelectAbleDate, ableDateList.prev, ableDateList.next, monthLength.prevMonth, monthLength.nextMonth, nextSelectAbleDate]",{"range":"145","text":"146"},"Update the dependencies array to be: [num]",{"range":"147","text":"148"},"Update the dependencies array to be: []",{"range":"149","text":"150"},"Update the dependencies array to be: [isFalseArr]",{"range":"151","text":"152"},"Update the dependencies array to be: [getMiddleDate, selectDate.startDate, findFalse, getSelectDate]",{"range":"153","text":"154"},"Update the dependencies array to be: [selectDate]",{"range":"155","text":"156"},"Update the dependencies array to be: [threeMonth]",{"range":"157","text":"158"},"Update the dependencies array to be: [getStandardDate, num]",{"range":"159","text":"160"},"Update the dependencies array to be: [calculationDate, dashStandard]",{"range":"161","text":"162"},"Update the dependencies array to be: [monthDate, ableDateList, getRenderDate]",{"range":"163","text":"164"},{"range":"165","text":"156"},"Update the dependencies array to be: [threeMonth, getInitDate]",{"range":"166","text":"167"},"Update the dependencies array to be: [findFalse, middleDate, dateArr, selectDate.startDate, selectDate.endDate, getDate]",{"range":"168","text":"169"},[1289,1313],"[selectTime, setSelectDate, selectDate]",[2018,2042],"[AM, TEST_AM, selectTime, selectReserveTime]",[2505,2529],"[PM, TEST_PM, selectTime, selectReserveTime]",[2970,3018],"[dashStandard]",[5157,5221],"[monthDate, monthDay, selectAbleDate, prevSelectAbleDate, ableDateList.prev, ableDateList.next, monthLength.prevMonth, monthLength.nextMonth, nextSelectAbleDate]",[5856,5885],"[num]",[6689,6713],"[]",[7307,7330],"[isFalseArr]",[7634,7658],"[getMiddleDate, selectDate.startDate, findFalse, getSelectDate]",[8783,8807],"[selectDate]",[12770,12801],"[threeMonth]",[12850,12855],"[getStandardDate, num]",[12904,12918],"[calculationDate, dashStandard]",[12965,12990],"[monthDate, ableDateList, getRenderDate]",[13608,13634],[13780,13806],"[threeMonth, getInitDate]",[14936,14983],"[findFalse, middleDate, dateArr, selectDate.startDate, selectDate.endDate, getDate]"]